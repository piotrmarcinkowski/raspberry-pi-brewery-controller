API:
GET	http://[hostname]/brewery/api/v1.0/therm_sensors	Retrieve list of therm sensors
GET	http://[hostname]/brewery/api/v1.0/therm_sensors/[therm_sensor_id]	Retrieve a single therm sensor data
POST http://[hostname]/brewery/api/v1.0/therm_sensors/[therm_sensor_id]/name	 Set therm sensor name
GET	http://[hostname]/brewery/api/v1.0/programs 	Get existing programs
POST	http://[hostname]/brewery/api/v1.0/programs 	Set a new program
GET	http://[hostname]/brewery/api/v1.0/programs/[program_id] 	Get program details - eg. temperature history, relay activations
PUT	http://[hostname]/brewery/api/v1.0/programs/[program_id]	Update an existing program - eg. change temp
DELETE	http://[hostname]/brewery/api/v1.0/programs/[program_id]	Delete a program
GET http://[hostname]/brewery/api/v1.0/logs  Gets logs


GET ../therm_sensors
-------------------
[
    {
        id: "sensor1Id",
        name: "sensor1Name"},
    }
    {
        id: "sensor2Id"
    }
]

GET ../therm_sensors/sensorId
--------------------
200
{
    id: "sensorId",
    temperature: <float>
}
404 when sensor not found
403 when sensor not ready

GET ../programs
--------------------
programs [
    <program>,
    <program>
]

POST ../programs
--------------------
{
    sensor_id: "sensorId",
    heating_relay_index: <integer[0..7]>,
    cooling_relay_index: <integer[0..7]>,
    max_temp: <float>,
    min_temp: <float>,
    active: True
}

